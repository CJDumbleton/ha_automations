alias: PV clipping - Forecast clipped PV for next 24 hours
description: ""
trigger:
  - platform: sun
    event: sunrise
    offset: 0
condition: []
action:
  - service: input_number.set_value
    metadata: {}
    data:
      value: >
        {# Default is 5 kW hybrid inverter.  Change the 5 to 3.6 if you have a
        3.6 kW inverter #}      {% set inverter_limit = namespace(value = 5 / 6)
        %}     {# Tune tuning_factor to optimise battery availability. #}    {%
        set tuning_factor = namespace(value=0.65) %}    {% set pv_clipped =
        namespace(value=0.0) %}      {% set pv_prev = namespace(value=0.0)
        %}     {% set pv_cur = namespace(value=0.0) %}      {%- for
        ten_min_period in state_attr('predbat.pv_energy', 'results') -%}
          {% if loop.index0 == 0 %}
            {%- set pv_prev.value = state_attr('predbat.pv_energy', 'results')[ten_min_period] | float -%}
          {% else %}
            {%- set pv_cur.value = state_attr('predbat.pv_energy', 'results')[ten_min_period] | float -%}
            {% set tuned_clipped = (pv_cur.value - pv_prev.value) / tuning_factor.value %}
            {% if tuned_clipped > inverter_limit.value %}
              {%- set pv_clipped.value = pv_clipped.value + tuned_clipped - inverter_limit.value -%}
            {% endif %}
            {%- set pv_prev.value = pv_cur.value -%}
          {% endif %}
          {# Only look at the next 24 hours (each loop is 10 minutes) #}
          {% if loop.index0 == 144 %}
            {% break %}
          {% endif %}
        {%- endfor -%}    {{ pv_clipped.value }}
    target:
      entity_id: input_number.pv_clipped_in_next_24_hours
mode: single
