alias: PV clipping - increment soc_max_value
description: >-
  Increment battery_soc_max throughout day if PV clipping forecast in next 30
  minutes
trigger:
  - platform: time_pattern
    minutes: "1"
  - platform: time_pattern
    minutes: "31"
condition:
  - condition: template
    value_template: |-
      {# Default is 5 kW hybrid inverter.  Change the 5 to 3.6 if you have a 3.6
      kW inverter#} 
      {% set inverter_limit = namespace(value = 5 / 6) %} 
      {% set pv_clipped = namespace(value=0.0) %} 
      {% set pv_prev = namespace(value=0.0) %} 
      {% set pv_cur = namespace(value=0.0) %} 
      {%- for this_item in state_attr('predbat.pv_energy', 'results') -%}
        {% if loop.index0 == 0 %}
          {%- set pv_prev.value = state_attr('predbat.pv_energy', 'results')[this_item] | float -%}
        {% else %}
          {%- set pv_cur.value = state_attr('predbat.pv_energy', 'results')[this_item] | float -%}
          {% if pv_cur.value - pv_prev.value > inverter_limit.value %}
            {%- set pv_clipped.value = pv_clipped.value + pv_cur.value - pv_prev.value - inverter_limit.value -%}
          {% endif %}
          {%- set pv_prev.value = pv_cur.value -%}
        {% endif %}
        {# Only look at the next 30 minutes -  (each loop is 10 minutes) #}
        {% if loop.index0 == 3 %}
          {% break %}
        {% endif %}
      {%- endfor -%} 
      {{ pv_clipped.value > 0 }}
action:
  - service: input_number.set_value
    metadata: {}
    data:
      value: >
        {# Default is 5 kW hybrid inverter.  Change the 5 to 3.6 if you have a
        3.6 kW inverter#} {% set inverter_limit = namespace(value = 5 / 6) %} {%
        set battery_soc_max = namespace(value =
        states('input_number.predbat_best_soc_max') | float) %} {% set
        pv_clipped = namespace(value=0.0) %} {% set pv_prev =
        namespace(value=0.0) %} {% set pv_cur = namespace(value=0.0) %} {%- for
        this_item in state_attr('predbat.pv_energy', 'results') -%}
          {% if loop.index0 == 0 %}
            {%- set pv_prev.value = state_attr('predbat.pv_energy', 'results')[this_item] | float -%}
          {% else %}
            {%- set pv_cur.value = state_attr('predbat.pv_energy', 'results')[this_item] | float -%}
            {% if pv_cur.value - pv_prev.value > inverter_limit.value %}
              {%- set pv_clipped.value = pv_clipped.value + pv_cur.value - pv_prev.value - inverter_limit.value -%}
            {% endif %}
            {%- set pv_prev.value = pv_cur.value -%}
          {% endif %}
          {# Only look at the next 30 minutes -  (each loop is 10 minutes) #}
          {% if loop.index0 == 3 %}
            {% break %}
          {% endif %}
        {%- endfor -%} {{ (battery_soc_max.value + pv_clipped.value) | float }}
    target:
      entity_id: input_number.predbat_best_soc_max
  - service: select.select_option
    metadata: {}
    data:
      option: >
        {# Round down the time to nearest half-hour #}
        {{ (now().strftime("%s") | int - ((now().strftime("%s")) | int ) % 1800
        ) | timestamp_custom("%H:%M:%S") }}
    target:
      entity_id: select.predbat_manual_discharge
mode: single
